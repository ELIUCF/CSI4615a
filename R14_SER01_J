// R14_SER01_J.java (non-compliant)
// Directly deserializes untrusted user data.
public class Ser implements Serializable {
  private final long serialVersionUID = 123456789;
  private Ser() {
    // Initialize
  }
  public static void writeObject(final ObjectOutputStream stream)
    throws IOException {
    stream.defaultWriteObject();
  }
  public static void readObject(final ObjectInputStream stream)
      throws IOException, ClassNotFoundException {
    stream.defaultReadObject();
  }
}

//Serialization: Do not deviate from the proper signatures of serialization methods
/*Deviating from the proper signatures of serialization methods can lead to unexpected behavior. 
Failure to limit the accessibility of the readObject() and writeObject() methods can leave code vulnerable to untrusted invocations. 
Declaring readResolve() and writeReplace() methods to be static or private can force subclasses to silently ignore them, while declaring them public allows them to be invoked by untrusted code.
*/
